<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reese Gerjekian</title>
    <link>https://rgerjeki.github.io/authors/reese-gerjekian/</link>
    <description>Recent content on Reese Gerjekian</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://rgerjeki.github.io/authors/reese-gerjekian/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Final Research Paper</title>
      <link>https://rgerjeki.github.io/cyber-operations/final-research-paper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/cyber-operations/final-research-paper/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/Reese Gerjekian_Final Research Paper_CYBV498_Spring24.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/Reese Gerjekian_Annotated References_CYBV498_Spring24.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>IAM Policy Explainer</title>
      <link>https://rgerjeki.github.io/web-developments/aws/iam-policy-explainer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/aws/iam-policy-explainer/</guid>
      <description>&lt;iframe src=&#34;https://iampoex.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://iampoex.github.io&#34; class=&#34;button&#34;&gt;Link to Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/iampoex/iampoex.github.io&#34; class=&#34;button&#34;&gt;Link to Github&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>CyberApolis Water Breach Report</title>
      <link>https://rgerjeki.github.io/cyber-operations/cyberapolis-water-breach-report/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/cyber-operations/cyberapolis-water-breach-report/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/Reese Gerjekian_CyberApolis Water Breach Report.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>AWS S3 Bucket Region Checker</title>
      <link>https://rgerjeki.github.io/web-developments/aws/s3-bucket-region/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/aws/s3-bucket-region/</guid>
      <description>&lt;iframe src=&#34;https://s3bucketregion.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://s3bucketregion.github.io&#34; class=&#34;button&#34;&gt;Visit Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/s3bucketregion/s3bucketregion.github.io&#34; class=&#34;button&#34;&gt;View on GitHub&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>AWS Study Guides</title>
      <link>https://rgerjeki.github.io/web-developments/aws/aws-study-guides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/aws/aws-study-guides/</guid>
      <description>&lt;iframe src=&#34;https://aws-study-guides.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://aws-study-guides.github.io&#34; class=&#34;button&#34;&gt;Link to Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/aws-study-guides/aws-study-guides.github.io&#34; class=&#34;button&#34;&gt;Link to Github&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>CLAS 160B1 Signiture Assignment</title>
      <link>https://rgerjeki.github.io/classics/meet-the-ancients-gateway-to-greece-and-rome-signiture-assignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/classics/meet-the-ancients-gateway-to-greece-and-rome-signiture-assignment/</guid>
      <description>&lt;iframe src=&#34;https://express.adobe.com/page/mLrXLf7Xsx1vc/&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>Collatz Conjecture in Python</title>
      <link>https://rgerjeki.github.io/python-projects/math/collatz-conjecture-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/python-projects/math/collatz-conjecture-in-python/</guid>
      <description>&lt;p&gt;The Collatz Conjecture, also known as the 3(x) + 1 conjecture, is a famous unsolved problem in mathematics. It proposes a sequence defined by the following rules: Start with any positive integer x. If x is even, divide it by 2; if n is odd, multiply it by 3 and add 1. The conjecture posits that no matter the starting number, the sequence will eventually reach the value 1.&lt;/p&gt;&#xA;&lt;section&gt;&#xA;    &lt;div&gt;&#xA;        &lt;iframe src=&#34;https://trinket.io/embed/python3/ce8f8a7c83?outputOnly=true&#34; width=&#34;100%&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div&gt;&#xA;        &lt;pre&gt;&#xA;            &lt;button onclick=&#34;copyCode()&#34;&gt;Copy Code&lt;/button&gt;&#xA;            &lt;code id=&#34;code-block&#34; class=&#34;python&#34;&gt;&#xA;                # importing the required module&#xA;                import matplotlib.pyplot as plt&#xA;&#xA;                # declare x-axis&#xA;                iteration_num_list = []&#xA;                x = 0&#xA;                iteration_num_list.append(x)&#xA;&#xA;                # check for positive number&#xA;                positive = False&#xA;                while positive == False:&#xA;                    print(&#34;Enter any number: &#34;)&#xA;                    num = float(input())&#xA;&#xA;                    if num &amp;lt;= 0:&#xA;                        print(&#34;INVALID, ENTER POSITIVE NUMBER: &#34;)&#xA;                        continue&#xA;                    else:&#xA;                        break&#xA;&#xA;&#xA;                # declare y-axis&#xA;                num_list = []&#xA;                num_list.append(num)&#xA;&#xA;                num = 3 * num + 1&#xA;&#xA;                while num &gt; 1:&#xA;                    # if num is even, then divide by 2&#xA;                    if num % 2 == 0:&#xA;                        print(num)&#xA;                        num = num / 2&#xA;                        # add 1 to the x-axis&#xA;                        x = x + 1&#xA;                        iteration_num_list.append(x)&#xA;                        # add num to the y-axis&#xA;                        num_list.append(num)&#xA;                        continue&#xA;                    # if num is odd, repeat 3(num)+1&#xA;                    else:&#xA;                        print(num)&#xA;                        num = 3 * num + 1&#xA;                        # add 1 to the x-axis&#xA;                        x = x + 1&#xA;                        iteration_num_list.append(x)&#xA;                        # add num to the y-axis&#xA;                        num_list.append(num)&#xA;                        continue&#xA;&#xA;                print(num)&#xA;                print(&#34;Done!&#34;)&#xA;&#xA;                # plotting the points&#xA;                plt.plot(iteration_num_list, num_list)&#xA;&#xA;                # naming the x axis&#xA;                plt.xlabel(&#39;iteration&#39;)&#xA;                # naming the y axis&#xA;                plt.ylabel(&#39;x in 3(x) + 1&#39;)&#xA;&#xA;                # giving a title to my graph&#xA;                plt.title(&#39;3(x) + 1&#39;)&#xA;&#xA;                # function to show the plot&#xA;                plt.show()&#xA;            &lt;/code&gt;&#xA;        &lt;/pre&gt;&#xA;&#xA;        &lt;script&gt;&#xA;        function copyCode() {&#xA;          var code = document.getElementById(&#34;code-block&#34;);&#xA;          var range = document.createRange();&#xA;          range.selectNode(code);&#xA;          window.getSelection().removeAllRanges();&#xA;          window.getSelection().addRange(range);&#xA;          document.execCommand(&#34;copy&#34;);&#xA;          alert(&#34;Code copied to clipboard!&#34;);&#xA;        }&#xA;        &lt;/script&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/section&gt;</description>
    </item>
    <item>
      <title>Euripides&#39; Medea</title>
      <link>https://rgerjeki.github.io/classics/euripides-medea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/classics/euripides-medea/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/medea.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>Fibonacci Sequence in Python</title>
      <link>https://rgerjeki.github.io/python-projects/math/fibonacci-sequence-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/python-projects/math/fibonacci-sequence-in-python/</guid>
      <description>&lt;p&gt;The Fibonacci sequence is a fundamental mathematical sequence where each number is the sum of the two preceding ones, starting from 0 and 1. So, the sequence begins 0, 1, 1, 2, 3, 5, 8, 13, 21, and so on. It has numerous applications in various fields, including mathematics, biology, art, and computer science and appears in natural phenomena, such as the arrangement of leaves on a stem or the spirals in a seashell.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Goldbach Conjecture in Python</title>
      <link>https://rgerjeki.github.io/python-projects/math/goldbach-conjecture-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/python-projects/math/goldbach-conjecture-in-python/</guid>
      <description>&lt;p&gt;The Goldbach Conjecture is a famous unsolved problem in number theory that dates back to 1742. It was first proposed by the German mathematician Christian Goldbach, who wrote a letter to the famous mathematician Leonhard Euler in which he stated that &amp;ldquo;every positive even integer greater than 2 can be expressed as the sum of two prime numbers.&amp;rdquo;.&lt;/p&gt;&#xA;&lt;section&gt;&#xA;    &lt;div&gt;&#xA;        &lt;iframe src=&#34;https://trinket.io/embed/python3/a85b4399a9?outputOnly=true&#34; width=&#34;100%&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div&gt;&#xA;        &lt;pre&gt;&#xA;            &lt;button onclick=&#34;copyCode()&#34;&gt;Copy Code&lt;/button&gt;&#xA;            &lt;code id=&#34;code-block&#34; class=&#34;python&#34;&gt;&#xA;                # Program to check if a number is prime or not&#xA;                num = 3&#xA;                prime = []&#xA;                &#xA;                # To take input from the user&#xA;                # num = int(input(&#34;Enter a number: &#34;))&#xA;                &#xA;                while num != 100:&#xA;                    if num &gt; 1:&#xA;                        # check for factors&#xA;                        for i in range(2, num):&#xA;                            if (num % i) == 0:&#xA;                                num = num + 1&#xA;                                break&#xA;                        else:&#xA;                            print(num, &#34; is prime!&#34;)&#xA;                            prime.append(num)&#xA;                            num = num + 1&#xA;                &#xA;                    # Check for 1, but this program starts at 3 so no need for this.&#xA;                    else:&#xA;                        num = num + 1&#xA;                &#xA;                &#xA;                end = False&#xA;                &#xA;                while end == False:&#xA;                    # get first number in list&#xA;                    first = prime[0]&#xA;                &#xA;                    # print list of prime numbers&#xA;                    print(prime)&#xA;                &#xA;                    # Iterate through the list of prime numbers&#xA;                    for x in prime:&#xA;                        # calculate and print sum of x numbers in list and first number in list&#xA;                        sum = x + first&#xA;                        print(str(x), &#39; + &#39;,  str(first),  &#39; = &#39;,  x + first)&#xA;                &#xA;                        # if the sum is even, continue with the program&#xA;                        if sum % 2 == 0:&#xA;                            continue&#xA;                        else:&#xA;                            print(&#34;STOP&#34;)&#xA;                            end = True&#xA;                            break&#xA;                    # get rid of first number in list&#xA;                    prime.pop(0)&#xA;                &#xA;                    # if the list of prime numbers is empty, exit while loop&#xA;                    if not prime:&#xA;                        end = True&#xA;            &lt;/code&gt;&#xA;        &lt;/pre&gt;&#xA;&#xA;        &lt;script&gt;&#xA;        function copyCode() {&#xA;          var code = document.getElementById(&#34;code-block&#34;);&#xA;          var range = document.createRange();&#xA;          range.selectNode(code);&#xA;          window.getSelection().removeAllRanges();&#xA;          window.getSelection().addRange(range);&#xA;          document.execCommand(&#34;copy&#34;);&#xA;          alert(&#34;Code copied to clipboard!&#34;);&#xA;        }&#xA;        &lt;/script&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/section&gt;</description>
    </item>
    <item>
      <title>Hesiod’s Theogony</title>
      <link>https://rgerjeki.github.io/classics/hesiods-theogony/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/classics/hesiods-theogony/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/hesiod.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>Homer&#39;s Odyssey</title>
      <link>https://rgerjeki.github.io/classics/homers-odyssey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/classics/homers-odyssey/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/homer2.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>Homer’s Iliad</title>
      <link>https://rgerjeki.github.io/classics/homers-iliad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/classics/homers-iliad/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/homer1.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>Homeric Hymns</title>
      <link>https://rgerjeki.github.io/classics/homeric-hymns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/classics/homeric-hymns/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/homeric.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>How Bout Them Apples Website</title>
      <link>https://rgerjeki.github.io/web-developments/how-bout-them-apples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/how-bout-them-apples/</guid>
      <description>&lt;iframe src=&#34;https://howboutthemapples.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://howboutthemapples.github.io&#34; class=&#34;button&#34;&gt;Link to Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/HowBoutThemApples/HowBoutThemApples.github.io&#34; class=&#34;button&#34;&gt;Link to Github&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>Livy&#39;s History of Rome</title>
      <link>https://rgerjeki.github.io/classics/livys-history-of-rome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/classics/livys-history-of-rome/</guid>
      <description>&lt;iframe src=&#34;https://rgerjeki.github.io/pdfs/livy.pdf&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>Password Checker in Python</title>
      <link>https://rgerjeki.github.io/python-projects/security/password-checker-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/python-projects/security/password-checker-in-python/</guid>
      <description>&lt;p&gt;The program defines a function, password_strength, that evaluates the strength of a provided password based on several criteria: length, presence of lowercase letters, uppercase letters, numbers, and special characters. It returns a string describing the password&amp;rsquo;s strength as either &amp;ldquo;Weak&amp;rdquo;, &amp;ldquo;Medium&amp;rdquo;, or &amp;ldquo;Strong&amp;rdquo;. When run as a standalone script, the program prompts the user to input a password and then displays the strength assessment of the entered password.&lt;/p&gt;&#xA;&lt;div class=&#34;container-check&#34;&gt;&#xA;    &lt;br&gt;&#xA;    &lt;h2&gt;Password Strength Checker&lt;/h2&gt;&#xA;    &lt;script&gt;&#xA;        function checkPasswordStrength() {&#xA;            const password = document.getElementById(&#39;passwordInput&#39;).value;&#xA;            let resultText = &#39;&#39;;&#xA;    &#xA;            if (password.length &lt; 8) {&#xA;                resultText = &#39;Weak: Password is too short.&#39;;&#xA;            } else if (!/[a-z]/.test(password)) {&#xA;                resultText = &#39;Weak: Password should contain at least one lowercase letter.&#39;;&#xA;            } else if (!/[A-Z]/.test(password)) {&#xA;                resultText = &#39;Weak: Password should contain at least one uppercase letter.&#39;;&#xA;            } else if (!/[0-9]/.test(password)) {&#xA;                resultText = &#39;Weak: Password should contain at least one digit.&#39;;&#xA;            } else if (!/[@_!#$%^&amp;*()&lt;&gt;?/\|}{~:]/.test(password)) {&#xA;                resultText = &#39;Medium: Password should contain at least one special character for stronger strength.&#39;;&#xA;            } else {&#xA;                resultText = &#39;Strong: Your password is strong.&#39;;&#xA;            }&#xA;    &#xA;            const strengthDisplay = document.getElementById(&#39;strengthDisplay&#39;);&#xA;            strengthDisplay.textContent = `Result: ${resultText}`;&#xA;            strengthDisplay.className = resultText.split(&#39;:&#39;)[0].toLowerCase();&#xA;        }&#xA;    &lt;/script&gt;&#xA;    &#xA;    &#xA;    &lt;input type=&#34;password&#34; id=&#34;passwordInput&#34; oninput=&#34;checkPasswordStrength()&#34; name=&#34;password&#34; placeholder=&#34;Enter your password&#34; required&gt;&#xA;    &lt;p id=&#34;strengthDisplay&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Query Lab</title>
      <link>https://rgerjeki.github.io/web-developments/sql/query-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/sql/query-lab/</guid>
      <description>&lt;iframe src=&#34;https://querylab-reg.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://querylab-reg.github.io&#34; class=&#34;button&#34;&gt;Visit Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/QueryLab-reg/QueryLab-reg.github.io&#34; class=&#34;button&#34;&gt;View on GitHub&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>Random Password Generator in Python</title>
      <link>https://rgerjeki.github.io/python-projects/security/random-password-generator-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/python-projects/security/random-password-generator-in-python/</guid>
      <description>&lt;p&gt;This program is a Random Password Generator designed to enhance online security. By specifying the desired password length, users can create strong passwords that combine lowercase and uppercase letters, numbers, and special symbols.&lt;/p&gt;&#xA;&lt;section&gt;&#xA;    &lt;div&gt;&#xA;        &lt;iframe src=&#34;https://trinket.io/embed/python3/6567b419f9?outputOnly=true&#34; width=&#34;100%&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div&gt;&#xA;        &lt;pre&gt;&#xA;            &lt;button onclick=&#34;copyCode()&#34;&gt;Copy Code&lt;/button&gt;&#xA;            &lt;code id=&#34;code-block&#34; class=&#34;python&#34;&gt;&#xA;                import random&#xA;                import math&#xA;                &#xA;                alpha = &#34;abcdefghijklmnopqrstuvwxyz&#34;&#xA;                num = &#34;0123456789&#34;&#xA;                special = &#34;@#$%&amp;*&#34;&#xA;                &#xA;                # pass_len=random.randint(8,13)  #without User INput&#xA;                pass_len = int(input(&#34;Enter Password Length&#34;))&#xA;                &#xA;                # length of password by 50-30-20 formula&#xA;                alpha_len = pass_len//2&#xA;                num_len = math.ceil(pass_len*30/100)&#xA;                special_len = pass_len-(alpha_len+num_len)&#xA;                &#xA;                &#xA;                password = []&#xA;                &#xA;                &#xA;                def generate_pass(length, array, is_alpha=False):&#xA;                    for i in range(length):&#xA;                        index = random.randint(0, len(array) - 1)&#xA;                        character = array[index]&#xA;                        if is_alpha:&#xA;                            case = random.randint(0, 1)&#xA;                            if case == 1:&#xA;                                character = character.upper()&#xA;                        password.append(character)&#xA;                &#xA;                &#xA;                # alpha password&#xA;                generate_pass(alpha_len, alpha, True)&#xA;&#xA;                # numeric password&#xA;                generate_pass(num_len, num)&#xA;&#xA;                # special Character password&#xA;                generate_pass(special_len, special)&#xA;&#xA;                # suffle the generated password list&#xA;                random.shuffle(password)&#xA;                &#xA;                # convert List To string&#xA;                gen_password = &#34;&#34;&#xA;                for i in password:&#xA;                    gen_password = gen_password + str(i)&#xA;                print(gen_password)&#xA;                &#xA;            &lt;/code&gt;&#xA;        &lt;/pre&gt;&#xA;&#xA;        &lt;script&gt;&#xA;        function copyCode() {&#xA;          var code = document.getElementById(&#34;code-block&#34;);&#xA;          var range = document.createRange();&#xA;          range.selectNode(code);&#xA;          window.getSelection().removeAllRanges();&#xA;          window.getSelection().addRange(range);&#xA;          document.execCommand(&#34;copy&#34;);&#xA;          alert(&#34;Code copied to clipboard!&#34;);&#xA;        }&#xA;        &lt;/script&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/section&gt;</description>
    </item>
    <item>
      <title>REG Blog Website</title>
      <link>https://rgerjeki.github.io/web-developments/reg-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/reg-blog/</guid>
      <description>&lt;iframe src=&#34;https://regblog.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://regblog.github.io&#34; class=&#34;button&#34;&gt;Visit Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/REGBlog/REGBlog.github.io&#34; class=&#34;button&#34;&gt;View on GitHub&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>Seattle Routes</title>
      <link>https://rgerjeki.github.io/web-developments/seattle-routes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/seattle-routes/</guid>
      <description>&lt;iframe src=&#34;https://seattleroutes.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://seattleroutes.github.io&#34; class=&#34;button&#34;&gt;Link to Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/SeattleRoutes/SeattleRoutes.github.io&#34; class=&#34;button&#34;&gt;Link to Github&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>The University of Michigan Dearborn Chess Club Website</title>
      <link>https://rgerjeki.github.io/web-developments/university-of-michigan-dearborn-chess-club/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/web-developments/university-of-michigan-dearborn-chess-club/</guid>
      <description>&lt;iframe src=&#34;https://uofmdcc.github.io&#34; width=&#34;100%&#34; height=&#34;500px&#34;&gt;&#xA;&lt;/iframe&gt;&#xA;&#xA;&lt;div class=&#34;button-container&#34;&gt;&#xA;    &lt;a href=&#34;https://uofmdcc.github.io&#34; class=&#34;button&#34;&gt;Link to Website&lt;/a&gt;&#xA;    &lt;a href=&#34;https://github.com/UofMDCC/UofMDCC.github.io&#34; class=&#34;button&#34;&gt;Link to Github&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;style&gt;&#xA;  .button-container {&#xA;      display: flex;&#xA;      gap: 10px;  &#xA;      justify-content: left;  &#xA;  }&#xA;  .button {&#xA;      display: inline-block;&#xA;      padding: 10px 15px;&#xA;      font-size: 16px;&#xA;      text-decoration: none;&#xA;      color: white;&#xA;      background-color: #007BFF;  &#xA;      border-radius: 5px;&#xA;      transition: background 0.3s;&#xA;  }&#xA;  .button:hover {&#xA;      background-color: #0056b3;  &#xA;  }&#xA;&lt;/style&gt;</description>
    </item>
    <item>
      <title>Twin Prime Conjecture in Python</title>
      <link>https://rgerjeki.github.io/python-projects/math/twin-prime-conjecture-in-python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://rgerjeki.github.io/python-projects/math/twin-prime-conjecture-in-python/</guid>
      <description>&lt;p&gt;The twin prime conjecture is a famous unsolved problem in number theory that deals with the distribution of twin prime numbers. Twin primes are pairs of prime numbers that differ by 2, such as (3, 5), (5, 7), (11, 13), and so on. The twin prime conjecture states that there are an infinite number of twin prime pairs.&lt;/p&gt;&#xA;&lt;section&gt;&#xA;    &lt;div&gt;&#xA;        &lt;iframe src=&#34;https://trinket.io/embed/python3/493bb53755?outputOnly=true&#34; width=&#34;100%&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div&gt;&#xA;        &lt;pre&gt;&#xA;            &lt;button onclick=&#34;copyCode()&#34;&gt;Copy Code&lt;/button&gt;&#xA;            &lt;code id=&#34;code-block&#34; class=&#34;python&#34;&gt;&#xA;                # Program to check if a number is prime or not&#xA;                num = 3&#xA;                prime = []&#xA;                &#xA;                # To take input from the user&#xA;                # num = int(input(&#34;Enter a number: &#34;))&#xA;                &#xA;                while num != 10000:&#xA;                    if num &gt; 1:&#xA;                        # check for factors&#xA;                        for i in range(2, num):&#xA;                            if (num % i) == 0:&#xA;                                num = num + 1&#xA;                                break&#xA;                        else:&#xA;                            prime.append(num)&#xA;                            num = num + 1&#xA;                &#xA;                    # Check for 1, but this program starts at 3 so no need for this.&#xA;                    else:&#xA;                        num = num + 1&#xA;                &#xA;                &#xA;                end = False&#xA;                &#xA;                while end == False:&#xA;                    # get first number in list&#xA;                    first = prime[0]&#xA;                &#xA;                    # Iterate through the list of prime numbers&#xA;                    for x in prime:&#xA;                        if x - first == 2:&#xA;                            print(first, &#34; and &#34;, x, &#34; are twin primes!&#34;)&#xA;                        else:&#xA;                            continue&#xA;                    prime.pop(0)&#xA;                &#xA;                    # if the list of prime numbers is empty, exit while loop&#xA;                    if not prime:&#xA;                        end = True&#xA;                &#xA;            &lt;/code&gt;&#xA;        &lt;/pre&gt;&#xA;&#xA;        &lt;script&gt;&#xA;        function copyCode() {&#xA;          var code = document.getElementById(&#34;code-block&#34;);&#xA;          var range = document.createRange();&#xA;          range.selectNode(code);&#xA;          window.getSelection().removeAllRanges();&#xA;          window.getSelection().addRange(range);&#xA;          document.execCommand(&#34;copy&#34;);&#xA;          alert(&#34;Code copied to clipboard!&#34;);&#xA;        }&#xA;        &lt;/script&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/section&gt;</description>
    </item>
  </channel>
</rss>
